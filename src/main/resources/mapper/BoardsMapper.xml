<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mybatis.dao.BoardsDao">

    <insert id="insert" parameterType="com.example.mybatis.dto.boards.BoardsDto">
        insert into boards(title, content, members_id, category_id) values (#{title}, #{content}, #{members_id}, #{category_id})
    </insert>

<!--    <select id="findAll" resultType="com.example.mybatis.dto.boards.MainListDto">-->
<!--        select b.id, b.title, m.nickname, b.created_at, b.view_cnt from boards b left join members m on b.members_id = m.id where b.del_yn = 'N' order by b.created_at desc-->
<!--    </select>-->

    <select id="getPagedPosts" resultType="com.example.mybatis.dto.boards.MainListDto">
        select b.id, b.title, m.nickname, b.created_at, b.view_cnt, b.category_id from boards b left join members m on b.members_id = m.id where b.del_yn = 'N'

        <choose>
            <when test="searchType == 'title_content'">
                and (b.title like concat('%', #{keyword}, '%') or b.content like concat('%', #{keyword}, '%'))
            </when>
            <when test="searchType == 'author'">
                and m.nickname like concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                and 1 = 1  <!-- 기본적으로 조건 없이 모든 데이터를 반환 -->
            </otherwise>
        </choose>

<!--        <if test="keyword != null and keyword != ''">-->
<!--            and (${searchType} like concat('%', #{keyword}, '%'))-->
<!--        </if>-->

        <if test="categoryId != null and categoryId > 0">
            and b.category_id = #{categoryId}
        </if>

        order by b.created_at desc limit #{startNum}, #{pageSize}
    </select>

    <select id="getTotalItemCount" resultType="int">
        select count(*) from boards b left join members m on b.members_id = m.id where b.del_yn = 'N'

        <choose>
            <when test="searchType == 'title_content'">
                and (b.title like concat('%', #{keyword}, '%') or b.content like concat('%', #{keyword}, '%'))
            </when>
            <when test="searchType == 'author'">
                and m.nickname like concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                and 1 = 1  <!-- 기본적으로 조건 없이 모든 데이터를 반환 -->
            </otherwise>
        </choose>

<!--        <if test="keyword != null and keyword != ''">-->
<!--            and (${searchType} like concat('%', #{keyword}, '%'))-->
<!--        </if>-->

        <if test="categoryId != null and categoryId > 0">
            and b.category_id = #{categoryId}
        </if>
    </select>

    <select id="findByBoardsId" parameterType="map" resultType="com.example.mybatis.dto.boards.DetailDto">
        select b.id, b.title, b.content, m.nickname, b.view_cnt, b.created_at, b.updated_at, b.members_id, c.name as category_name from boards b
        left join members m on b.members_id = m.id
        left join category c on b.category_id = c.id
        where b.id = #{boardsId}
    </select>

    <select id="findByIdAndMembersId" parameterType="map" resultType="com.example.mybatis.dto.boards.BoardsDto">
        select * from boards b LEFT JOIN members m on b.members_id = m.id where b.id = #{id} and b.members_id = #{members_id}
    </select>

<!--    <select id="findById" resultType="com.example.mybatis.dto.boards.BoardsDto">-->
<!--        select * from boards where id = #{id}-->
<!--    </select>-->

    <update id="update">
        update boards set title = #{title}, content = #{content}, category_id = #{category_id}, updated_at = now() where id = #{id} and del_yn = "N"
    </update>

    <update id="delete">
        update boards set del_yn = "Y" where id = #{id}
    </update>

    <update id="viewCnt">
        update boards set view_cnt = view_cnt + 1 where id = #{id}
    </update>

</mapper>